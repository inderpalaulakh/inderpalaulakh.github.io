<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Archives on Learner</title>
    <link>https://inderpalaulakh.com/archives/</link>
    <description>Recent content in Archives on Learner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 15 Dec 2020 20:57:27 -0800</lastBuildDate><atom:link href="https://inderpalaulakh.com/archives/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Overloading &amp; Overriding</title>
      <link>https://inderpalaulakh.com/archives/dispatch/</link>
      <pubDate>Tue, 15 Dec 2020 20:57:27 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/archives/dispatch/</guid>
      <description>To learn about Single &amp;amp; Double Dispatch, many design patterns, we need to understand Overloading and Overriding.
Overloading Overloading is compile-time polymorphism. The methods/functions with same name but different number/type parameters are example of Overloading.
As Overloading is compile-time, means during run-time the base type is considered. Example:
class Crop{public virtual void CropName(){Console.WriteLine(&amp;quot;Hey, My type is Crop&amp;quot;);}}class Wheat : Crop{public override void CropName(){Console.WriteLine(&amp;quot;Hey, My type is Wheat&amp;quot;);}}/* An example of overloading (Method with same name but different parameter type)* */class CropWatering{public void WaterSupply(Crop crop){Console.</description>
    </item>
    
  </channel>
</rss>
