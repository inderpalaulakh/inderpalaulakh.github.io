<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on Learner</title>
    <link>https://inderpalaulakh.com/tags/android/</link>
    <description>Recent content in Android on Learner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 24 Mar 2021 18:26:03 -0800</lastBuildDate><atom:link href="https://inderpalaulakh.com/tags/android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MVC &amp; MVVM Android Design Pattern (Android)</title>
      <link>https://inderpalaulakh.com/posts/mvcmvvm/</link>
      <pubDate>Wed, 24 Mar 2021 18:26:03 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/mvcmvvm/</guid>
      <description>Recently, I developed an Android application. The application was developed focusing on simplicity. The application was small thus skipped writing unit tests. I know skipping the unit tests is not a good practice.
In past, I was working on backend projects where tons of unit tests exists for API&amp;rsquo;s. I am new to application development and spent some time to learn about MVC and MVVM design patterns.
For next project, the preference is MVVM. At end of this post I will share the reason to choose MVVM.
The example code for this post is written for Android application.
MVC (Model-View-Controller) Model: Model is data layer.</description>
    </item>
    
    <item>
      <title>Android Application implementing Azure Active Directory Authentication to call protected Azure Function </title>
      <link>https://inderpalaulakh.com/posts/azureaad/</link>
      <pubDate>Sat, 23 Jan 2021 13:36:35 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/azureaad/</guid>
      <description>In this post, I am writing about how to setup Azure Active Directory Android application login to access Azure functions protected with Azure Active Directory authentication.
Create an Android Application Open Android Studio and create new Project with Empty Activity.
Configure project with below settings
Get SHA1 &amp;amp; package name Open powershell and cd to C:\Users&amp;lt;username&amp;gt;.android Execute below command, if prompted for password enter android or leave blank
keytool -list -v -keystore debug.keystore -alias androiddebugkey -storepass android -keypass android  Copy SHA1 -&amp;gt; Navigate to https://base64.guru/converter/encode/hex and convert SHA1 to Base64
Copy package name from AndroidManifest.xml
Now you have packagename &amp;amp; Base64 SHA1 hash</description>
    </item>
    
    <item>
      <title>Android Studio Enable Checkstyle (Gradle)</title>
      <link>https://inderpalaulakh.com/posts/android-checkstyle/</link>
      <pubDate>Sun, 17 Jan 2021 08:23:23 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/android-checkstyle/</guid>
      <description>Checkstyle is a development tool to help programmers write Java code that adheres to a coding standard.
Steps to enable checkstyle for Android Project Create checkstyle.xml Create folder checkstyle inside Android Project app folder. Create file checkstyle.xml Reference
&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt; &amp;lt;!DOCTYPE module PUBLIC &amp;quot;-//Puppy Crawl//DTD Check Configuration 1.2//EN&amp;quot; &amp;quot;http://www.puppycrawl.com/dtds/configuration_1_2.dtd&amp;quot;&amp;gt; &amp;lt;!-- Checkstyle configuration that checks the sun coding conventions from: - the Java Language Specification at http://java.sun.com/docs/books/jls/second_edition/html/index.html - the Sun Code Conventions at http://java.sun.com/docs/codeconv/ - the Javadoc guidelines at http://java.sun.com/j2se/javadoc/writingdoccomments/index.html - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html - some best practices Checkstyle is very configurable. Be sure to read the documentation at http://checkstyle.</description>
    </item>
    
  </channel>
</rss>
