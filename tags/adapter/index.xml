<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Adapter on Learner</title>
    <link>https://inderpalaulakh.com/tags/adapter/</link>
    <description>Recent content in Adapter on Learner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 13 Feb 2021 17:11:06 -0800</lastBuildDate><atom:link href="https://inderpalaulakh.com/tags/adapter/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Adapter Design Pattern</title>
      <link>https://inderpalaulakh.com/posts/adapterdesignpattern/</link>
      <pubDate>Sat, 13 Feb 2021 17:11:06 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/adapterdesignpattern/</guid>
      <description>This design patterns guides to create a wrap around existing class to reuse existing class for a new requirement.
Assume, I have two logging classes named WriteLogsToLocalFile and WriteLogsToServer.
class WriteLogsToLocalFile{public void Log(string fileName, string message){//write logs to file }}class WriteLogsToServer{public void Log(string urL, string message, string token){//call rest API with oAuth // Note: here token is used for oAuth}}static void Main(string[] args){WriteLogsToLocalFile fileLogs = new WriteLogsToLocalFile();fileLogs.Log(&amp;quot;hello.xml&amp;quot;, &amp;quot;login success&amp;quot;);WriteLogsToServer serverLogs = new WriteLogsToServer();serverLogs.Log(&amp;quot;https://server.logs/upload&amp;quot;, &amp;quot;login success&amp;quot;, &amp;quot;oAuthToken&amp;quot;);} Here user is manually creating objects to write logs separately to local file and server.</description>
    </item>
    
  </channel>
</rss>
