<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Learner</title>
    <link>https://inderpalaulakh.com/posts/</link>
    <description>Recent content in Posts on Learner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 02 May 2021 00:00:29 -0700</lastBuildDate><atom:link href="https://inderpalaulakh.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dagger, Injecting custom objects (Interface implementation)</title>
      <link>https://inderpalaulakh.com/posts/dicustom/</link>
      <pubDate>Sun, 02 May 2021 00:00:29 -0700</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/dicustom/</guid>
      <description>It is very connivent to use any DI framework when all the objects required are available in application. For example, I have two classes Logger, Service and class Middleware is dependent on these classes.
class Logger() class Service() //this class requires Logger &amp;amp; Service object class Middleware(private val logger:Logger. private val service:Service) // middleware object val middleware = Middleware(Logger(),Service())  Dagger can build objects of Logger and Service classes by indicating @Inject annotation to all three classes
internal class Logger @Inject constructor() internal class Service @Inject constructor() //this class requires Logger &amp;amp; Service object internal class Middleware @Inject constructor(private val logger:Logger.</description>
    </item>
    
    <item>
      <title>Android/Java Dependency Injection Frameworks (Android Library &amp; App Development)</title>
      <link>https://inderpalaulakh.com/posts/di/</link>
      <pubDate>Mon, 12 Apr 2021 10:46:57 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/di/</guid>
      <description>Below are widely used Dependency Injection frameworks mostly by android &amp;amp; Java application projects.
For Android application development, the suggested Framework by Google are Dagger and Hilt. These frameworks help to avoid writing boilerplate code.
Guice Guice (pronounced &amp;lsquo;juice&amp;rsquo;) is a lightweight dependency injection framework for Java 6 and above, brought to you by Google. (github.com)
With 10K stars this framework is mostly used by Java developers where Java is used for backend &amp;amp; Application development.
For Android, this framework is not suggested as this framework use reflections to scan annotations from code. This requires significant CPU cycles and RAM thus slowdowns application launch.</description>
    </item>
    
    <item>
      <title>Distributed caching - Redis</title>
      <link>https://inderpalaulakh.com/posts/redis/</link>
      <pubDate>Thu, 25 Mar 2021 18:26:03 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/redis/</guid>
      <description>Redis is in-memory data structure store. Redis has a really good documentation to learn and implement framework capabilities. 
My mentor at Job guided me to learn Redis. My primary focus is to understand how Redis helps for Distributed Caching.
Distributed Caching Distributed Caching is cache shared by multiple servers. The miclsroservices or services can keep it&amp;rsquo;s own cache for data but distributed cache has many advantages as we can scale and manage cache at one place.
The caches are used to save time to reduce cost to read database from database. The in memory(RAM cache) data is much more efficient to perform read operations as compared to SQL databases.</description>
    </item>
    
    <item>
      <title>MVC &amp; MVVM Android Design Pattern (Android)</title>
      <link>https://inderpalaulakh.com/posts/mvcmvvm/</link>
      <pubDate>Wed, 24 Mar 2021 18:26:03 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/mvcmvvm/</guid>
      <description>Recently, I developed an Android application. The application was developed focusing on simplicity. The application was small thus skipped writing unit tests. I know skipping the unit tests is not a good practice.
In past, I was working on backend projects where tons of unit tests exists for API&amp;rsquo;s. I am new to application development and spent some time to learn about MVC and MVVM design patterns.
For next project, the preference is MVVM. At end of this post I will share the reason to choose MVVM.
The example code for this post is written for Android application.
MVC (Model-View-Controller) Model: Model is data layer.</description>
    </item>
    
    <item>
      <title>Coding blog with colored code snippets(.md posts)</title>
      <link>https://inderpalaulakh.com/posts/colorcode/</link>
      <pubDate>Thu, 25 Feb 2021 19:38:55 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/colorcode/</guid>
      <description>We can make our code snippets more interesting and readable by sharing code with color formatting.
To turn on colors, just add language short name 😉
For C# code, add cs after ```.
```cs
write your code here
```
Example:
static void Main(string[] args) { Logging logger = new Logging(); logger.Log(&amp;quot;login success&amp;quot;); }  </description>
    </item>
    
    <item>
      <title>Adapter Design Pattern</title>
      <link>https://inderpalaulakh.com/posts/adapterdesignpattern/</link>
      <pubDate>Sat, 13 Feb 2021 17:11:06 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/adapterdesignpattern/</guid>
      <description>This design patterns guides to create a wrap around existing class to reuse existing class for a new requirement.
Assume, I have two logging classes named WriteLogsToLocalFile and WriteLogsToServer.
class WriteLogsToLocalFile { public void Log(string fileName, string message) { //write logs to file } } class WriteLogsToServer { public void Log(string urL, string message, string token) { //call rest API with oAuth // Note: here token is used for oAuth } } static void Main(string[] args) { WriteLogsToLocalFile fileLogs = new WriteLogsToLocalFile(); fileLogs.Log(&amp;quot;hello.xml&amp;quot;, &amp;quot;login success&amp;quot;); WriteLogsToServer serverLogs = new WriteLogsToServer(); serverLogs.Log(&amp;quot;https://server.logs/upload&amp;quot;, &amp;quot;login success&amp;quot;, &amp;quot;oAuthToken&amp;quot;); }  Here user is manually creating objects to write logs separately to local file and server.</description>
    </item>
    
    <item>
      <title>Code Review</title>
      <link>https://inderpalaulakh.com/posts/codereview/</link>
      <pubDate>Tue, 09 Feb 2021 07:50:50 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/codereview/</guid>
      <description>Code reviews plays an important role to keep code consistent and readable. Code reviews are conducted to maintain quality and simplicity. The bugs should be taken care by automated tests. Code reviews are the best way to learn coding skills from your team members.
In this post, I want to share my opinion on how to write code reviews comments. I read a document Google code review. This document is really helpful to write code reviews comments and how to fix, reply on code review comments.
The variable name, function name or class name style formatting This type of comments should be taken care by compile time code validation.</description>
    </item>
    
    <item>
      <title>Composite Design Pattern</title>
      <link>https://inderpalaulakh.com/posts/compositedesignpattern/</link>
      <pubDate>Sun, 24 Jan 2021 15:33:39 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/compositedesignpattern/</guid>
      <description>The Composite Design pattern is structural design pattern. This design pattern is used when we want to treat a group of objects in same way. The composite design pattern has following elements.
Component This is a class that contain all the members that needs to be implemented by all the objects.
Composite This class is used to add, remove and traverse components.
Leaf The leaf object in tree structure is defined as leaf element.
Code Sample I want to print salaries of all employees in my organization with names and designation. The root of organization tree is CEO. The CEO has directors as child composite.</description>
    </item>
    
    <item>
      <title>Android Application implementing Azure Active Directory Authentication to call protected Azure Function </title>
      <link>https://inderpalaulakh.com/posts/azureaad/</link>
      <pubDate>Sat, 23 Jan 2021 13:36:35 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/azureaad/</guid>
      <description>In this post, I am writing about how to setup Azure Active Directory Android application login to access Azure functions protected with Azure Active Directory authentication.
Create an Android Application Open Android Studio and create new Project with Empty Activity.
Configure project with below settings
Get SHA1 &amp;amp; package name Open powershell and cd to C:\Users&amp;lt;username&amp;gt;.android Execute below command, if prompted for password enter android or leave blank
keytool -list -v -keystore debug.keystore -alias androiddebugkey -storepass android -keypass android  Copy SHA1 -&amp;gt; Navigate to https://base64.guru/converter/encode/hex and convert SHA1 to Base64
Copy package name from AndroidManifest.xml
Now you have packagename &amp;amp; Base64 SHA1 hash</description>
    </item>
    
    <item>
      <title>Android Studio Enable Checkstyle (Gradle)</title>
      <link>https://inderpalaulakh.com/posts/android-checkstyle/</link>
      <pubDate>Sun, 17 Jan 2021 08:23:23 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/android-checkstyle/</guid>
      <description>Checkstyle is a development tool to help programmers write Java code that adheres to a coding standard.
Steps to enable checkstyle for Android Project Create checkstyle.xml Create folder checkstyle inside Android Project app folder. Create file checkstyle.xml Reference
&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt; &amp;lt;!DOCTYPE module PUBLIC &amp;quot;-//Puppy Crawl//DTD Check Configuration 1.2//EN&amp;quot; &amp;quot;http://www.puppycrawl.com/dtds/configuration_1_2.dtd&amp;quot;&amp;gt; &amp;lt;!-- Checkstyle configuration that checks the sun coding conventions from: - the Java Language Specification at http://java.sun.com/docs/books/jls/second_edition/html/index.html - the Sun Code Conventions at http://java.sun.com/docs/codeconv/ - the Javadoc guidelines at http://java.sun.com/j2se/javadoc/writingdoccomments/index.html - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html - some best practices Checkstyle is very configurable. Be sure to read the documentation at http://checkstyle.</description>
    </item>
    
    <item>
      <title>Generation of Sequence Diagram using Mermaid</title>
      <link>https://inderpalaulakh.com/posts/mermaid/</link>
      <pubDate>Wed, 06 Jan 2021 10:46:57 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/mermaid/</guid>
      <description>I use online tools to generate sequence diagrams. Recently, my colleague at work guided me about Mermaid to generate sequence diagrams. This is an awesome tool.
Mermaid
Mermaid has online editor Editor. However, I did not use online editor for confidentiality reasons.
I created index.html and opened in browser.
 &amp;lt;html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;script src=&amp;quot;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; mermaid.initialize({ startOnLoad: true }); &amp;lt;/script&amp;gt; &amp;lt;div class=&amp;quot;mermaid&amp;quot;&amp;gt; sequenceDiagram participant A participant B A-&amp;gt;&amp;gt;B:How are you? B--&amp;gt;&amp;gt; A: I am good loop test loop A-&amp;gt;&amp;gt;B:How are you? B--&amp;gt;&amp;gt; A: I am good end &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  </description>
    </item>
    
    <item>
      <title>2020 Review</title>
      <link>https://inderpalaulakh.com/posts/2020review/</link>
      <pubDate>Thu, 31 Dec 2020 13:26:03 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/2020review/</guid>
      <description>The year 2020 was a year of unpredicted event Covid-19. In January, my wife travelled to Toronto for her co-op and I planned to spend my evenings studying algorithms and software engineering concepts alongside full time job.
I planned to complete most of the study-topics in March and completed as planned. In mid-March my office shared guidelines to work from home. My wife was also back from Toronto and started a co-op remotely.
I saved two hours of commute time. My office had layoffs. Some of my teammates were laid off. It was a hard time to see teammates leaving, and I got worried about myself.</description>
    </item>
    
    <item>
      <title>Accessing Azure Pipeline variables in Webpack Node.js</title>
      <link>https://inderpalaulakh.com/posts/pipelinevar/</link>
      <pubDate>Wed, 30 Dec 2020 21:22:38 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/pipelinevar/</guid>
      <description>Recently, I struggled a bit to figure out a way to access Azure-Pipeline Variables in Node.js JavaScript/TypeScript project. However, it is easy.
.yml Pipeline code - task: Npm@1 displayName: &amp;quot;Run project&amp;quot; env: MyVariableName: $(MYVARIABLENAME) // this is pipeline variable name, in Capital letters inputs: commands: &#39;custom&#39; CustomCommand: &#39;run test&#39;  npm Package install package string-replace-loader
TypeScript/JavaScript File Create a file with any name &amp;ldquo;test.ts&amp;rdquo;
test.ts const test = () =&amp;gt; { const myVariable = &amp;quot;My-Variable&amp;quot;; };  Setup webpack.config.js  module: { rules: [ { test: /test\.ts$/, loader: &#39;string-replace-loader&#39;, options: { search: &#39;My-Variable&#39;, replace: process.env[&#39;MyVariableName&#39;] // from .yml env } } ] } }  Finally  &amp;quot;scripts&amp;quot; :{ &amp;quot;test&amp;quot;: &amp;quot;webpack --config webpack.</description>
    </item>
    
    <item>
      <title>DoubleDispatch</title>
      <link>https://inderpalaulakh.com/posts/doubledispatch/</link>
      <pubDate>Mon, 28 Dec 2020 00:22:53 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/doubledispatch/</guid>
      <description>To understand Double Dispatch, understanding of Overloading and Overriding is must. I already talked about Overloading and Overriding in post Overloading &amp;amp; Overriding.
One level of virtual dispatching derived types override a base types: as shown below
 class Farms { public virtual void Irrigation() { Console.WriteLine(&amp;quot;Farm Type&amp;quot;); } } class WheatFarm : Farms { public override void Irrigation() { Console.WriteLine(&amp;quot;WheatFarm&amp;quot;); } } class RicaFarm : WheatFarm { public override void Irrigation() { Console.WriteLine(&amp;quot;RicaFarm&amp;quot;); } } static void Main(string[] args) { var a = new Farms(); var b = new WheatFarm(); var c = new RicaFarm(); a.Irrigation(); b.Irrigation(); c.Irrigation(); } //output Farm Type WheatFarm RicaFarm  Two level of virtual dispatching (Double Dispatch) This concept is used in Visitor Design Pattern.</description>
    </item>
    
    <item>
      <title>Overloading &amp; Overriding</title>
      <link>https://inderpalaulakh.com/posts/dispatch/</link>
      <pubDate>Tue, 15 Dec 2020 20:57:27 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/dispatch/</guid>
      <description>To learn about Single &amp;amp; Double Dispatch, many design patterns, we need to understand Overloading and Overriding.
Overloading Overloading is compile-time polymorphism. The methods/functions with same name but different number/type parameters are example of Overloading.
As Overloading is compile-time, means during run-time the base type is considered. Example:
class Crop { public virtual void CropName() { Console.WriteLine(&amp;quot;Hey, My type is Crop&amp;quot;); } } class Wheat : Crop { public override void CropName() { Console.WriteLine(&amp;quot;Hey, My type is Wheat&amp;quot;); } } /* An example of overloading (Method with same name but different parameter type) * */ class CropWatering { public void WaterSupply(Crop crop) { Console.</description>
    </item>
    
    <item>
      <title>Book Summary: Don’t make me think - Steve Krug </title>
      <link>https://inderpalaulakh.com/posts/my-book-donotmakemethink-post/</link>
      <pubDate>Mon, 14 Dec 2020 12:14:41 -0800</pubDate>
      
      <guid>https://inderpalaulakh.com/posts/my-book-donotmakemethink-post/</guid>
      <description>The book “Don’t make me think” is written by Steve Krug. This is the first book that I read about UX(User Experience Design) design. This book is concise and has four sections.
The “guiding principles” talks about not puzzling the user to find required content. These principles guide to omit needless content, using conventions, images and explains the web page scanning habit of user (not reading complete content).
The section “Things you need to get right” has content to design navigation that helps user to find their way. The big bang theory of web design is about designing home page, using tag lines (nothing beats a good tagline), welcome blurb and testing home page usability.</description>
    </item>
    
  </channel>
</rss>
